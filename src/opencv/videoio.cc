#include "videoio.h"

#include "videoio/VideoCapture.h"

void
videoio::Init(Handle<Object> target, std::shared_ptr<overload_resolution> overload) {


	auto CAP = CreateNamedObject(target, "CAP");
	SetObjectProperty(CAP, "CAP_ANY", cv::CAP_ANY);
	SetObjectProperty(CAP, "CAP_VFW", cv::CAP_VFW);
	SetObjectProperty(CAP, "CAP_V4L", cv::CAP_V4L);
	SetObjectProperty(CAP, "CAP_V4L2",cv::			CAP_V4L2	   );
	SetObjectProperty(CAP, "CAP_FIREWARE",cv::		CAP_FIREWARE   );
	SetObjectProperty(CAP, "CAP_FIREWIRE",cv::		CAP_FIREWIRE   );
	SetObjectProperty(CAP, "CAP_IEEE1394",cv::		CAP_IEEE1394   );
	SetObjectProperty(CAP, "CAP_DC1394",cv:: 			CAP_DC1394 );
	SetObjectProperty(CAP, "CAP_CMU1394",cv:: 		CAP_CMU1394    );
	SetObjectProperty(CAP, "CAP_QT",cv:: 				CAP_QT 	   );
	SetObjectProperty(CAP, "CAP_UNICAP",cv::			CAP_UNICAP );
	SetObjectProperty(CAP, "CAP_DSHOW",cv:: 			CAP_DSHOW  );
	SetObjectProperty(CAP, "CAP_PVAPI",cv:: 			CAP_PVAPI  );
	SetObjectProperty(CAP, "CAP_OPENNI", cv::CAP_OPENNI			   );
	SetObjectProperty(CAP, "CAP_OPENNI_ASUS", cv::CAP_OPENNI_ASUS  );
	SetObjectProperty(CAP, "CAP_ANDROID", cv::CAP_ANDROID		   );
	SetObjectProperty(CAP, "CAP_XIAPI", cv::CAP_XIAPI			   );
	SetObjectProperty(CAP, "CAP_AVFOUNDATION", cv::CAP_AVFOUNDATION);
	SetObjectProperty(CAP, "CAP_GIGANETIX", cv::CAP_GIGANETIX	   );
	SetObjectProperty(CAP, "CAP_MSMF", cv::CAP_MSMF				   );
	SetObjectProperty(CAP, "CAP_WINRT", cv::CAP_WINRT			   );
	SetObjectProperty(CAP, "CAP_INTELPERC", cv::CAP_INTELPERC	   );
	SetObjectProperty(CAP, "CAP_OPENNI2", cv::CAP_OPENNI2		   );
	SetObjectProperty(CAP, "CAP_OPENNI2_ASUS", cv::CAP_OPENNI2_ASUS);
	SetObjectProperty(CAP, "CAP_GPHOTO2", cv::CAP_GPHOTO2		   );
	SetObjectProperty(CAP, "CAP_GSTREAMER", cv::CAP_GSTREAMER	   );
	SetObjectProperty(CAP, "CAP_FFMPEG",cv:: 			CAP_FFMPEG );
	SetObjectProperty(CAP, "CAP_IMAGES",cv:: 			CAP_IMAGES );
	overload->add_type_alias("CAP", "int");


	auto CAP_PROP_GENERIC = CreateNamedObject(target, "CAP_PROP_GENERIC");
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_POS_MSEC",cv::					CAP_PROP_POS_MSEC			);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_POS_FRAMES", cv::CAP_PROP_POS_FRAMES							);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_POS_AVI_RATIO", cv::CAP_PROP_POS_AVI_RATIO					);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_FRAME_WIDTH", cv::CAP_PROP_FRAME_WIDTH						);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_FRAME_HEIGHT", cv::CAP_PROP_FRAME_HEIGHT						);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_FPS", cv::CAP_PROP_FPS										);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_FOURCC", cv::CAP_PROP_FOURCC									);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_FRAME_COUNT", cv::CAP_PROP_FRAME_COUNT						);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_FORMAT", cv::CAP_PROP_FORMAT									);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_MODE", cv::CAP_PROP_MODE										);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_BRIGHTNESS", cv::CAP_PROP_BRIGHTNESS							);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_CONTRAST", cv::CAP_PROP_CONTRAST								);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_SATURATION", cv::CAP_PROP_SATURATION							);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_HUE", cv::CAP_PROP_HUE										);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_GAIN", cv::CAP_PROP_GAIN										);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_EXPOSURE", cv::CAP_PROP_EXPOSURE								);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_CONVERT_RGB", cv::CAP_PROP_CONVERT_RGB						);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_WHITE_BALANCE_BLUE_U", cv::CAP_PROP_WHITE_BALANCE_BLUE_U		);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_RECTIFICATION", cv::CAP_PROP_RECTIFICATION					);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_MONOCHROME", cv::CAP_PROP_MONOCHROME							);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_SHARPNESS", cv::CAP_PROP_SHARPNESS							);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_AUTO_EXPOSURE", cv::CAP_PROP_AUTO_EXPOSURE					);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_GAMMA", cv::CAP_PROP_GAMMA									);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_TEMPERATURE", cv::CAP_PROP_TEMPERATURE						);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_TRIGGER", cv::CAP_PROP_TRIGGER								);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_TRIGGER_DELAY", cv::CAP_PROP_TRIGGER_DELAY					);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_WHITE_BALANCE_RED_V", cv::CAP_PROP_WHITE_BALANCE_RED_V		);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_ZOOM", cv::CAP_PROP_ZOOM										);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_FOCUS", cv::CAP_PROP_FOCUS									);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_GUID", cv::CAP_PROP_GUID										);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_ISO_SPEED", cv::CAP_PROP_ISO_SPEED							);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_BACKLIGHT", cv::CAP_PROP_BACKLIGHT							);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_PAN", cv::CAP_PROP_PAN										);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_TILT", cv::CAP_PROP_TILT										);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_ROLL", cv::CAP_PROP_ROLL										);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_IRIS", cv::CAP_PROP_IRIS										);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_SETTINGS", cv::CAP_PROP_SETTINGS								);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_BUFFERSIZE", cv::CAP_PROP_BUFFERSIZE							);
	SetObjectProperty(CAP_PROP_GENERIC, "CAP_PROP_AUTOFOCUS	", cv::CAP_PROP_AUTOFOCUS							);
	overload->add_type_alias("CAP_PROP_GENERIC", "int");

	auto CAP_MODE = CreateNamedObject(target, "CAP_MODE");
	SetObjectProperty(CAP_MODE, "CAP_MODE_BGR"	,cv::CAP_MODE_BGR  );
	SetObjectProperty(CAP_MODE, "CAP_MODE_RGB"	,cv::CAP_MODE_RGB  );
	SetObjectProperty(CAP_MODE, "CAP_MODE_GRAY"	,cv::CAP_MODE_GRAY );
	SetObjectProperty(CAP_MODE, "CAP_MODE_YUYV"  ,cv::CAP_MODE_YUYV);
	overload->add_type_alias("CAP_MODE", "int");

	auto CAP_PROP_DC1394 = CreateNamedObject(target, "CAP_PROP_DC1394");
	SetObjectProperty(CAP_PROP_DC1394, "CAP_PROP_DC1394_OFF"						,cv::CAP_PROP_DC1394_OFF				);
	SetObjectProperty(CAP_PROP_DC1394, "CAP_PROP_DC1394_MODE_MANUAL"				,cv::CAP_PROP_DC1394_MODE_MANUAL		);
	SetObjectProperty(CAP_PROP_DC1394, "CAP_PROP_DC1394_MODE_AUTO"				,cv::CAP_PROP_DC1394_MODE_AUTO				);
	SetObjectProperty(CAP_PROP_DC1394, "CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO"		,cv::CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO		);
	SetObjectProperty(CAP_PROP_DC1394, "CAP_PROP_DC1394_MAX"						,cv::CAP_PROP_DC1394_MAX				);
	overload->add_type_alias("CAP_PROP_DC1394", "int");

	auto CAP_OPENNI_MAP = CreateNamedObject(target, "CAP_OPENNI_MAP");
	SetObjectProperty(CAP_OPENNI_MAP, "CAP_OPENNI_DEPTH_GENERATOR",cv::CAP_OPENNI_DEPTH_GENERATOR);
	SetObjectProperty(CAP_OPENNI_MAP, "CAP_OPENNI_IMAGE_GENERATOR",cv::CAP_OPENNI_IMAGE_GENERATOR);
	SetObjectProperty(CAP_OPENNI_MAP, "CAP_OPENNI_GENERATORS_MASK",cv::CAP_OPENNI_GENERATORS_MASK);
	overload->add_type_alias("CAP_OPENNI_MAP", "int");


	auto CAP_PROP_OPENNI = CreateNamedObject(target, "CAP_PROP_OPENNI");
	SetObjectProperty(CAP_PROP_OPENNI, "CAP_PROP_OPENNI_OUTPUT_MODE",cv::CAP_PROP_OPENNI_OUTPUT_MODE				);
	SetObjectProperty(CAP_PROP_OPENNI, "CAP_PROP_OPENNI_FRAME_MAX_DEPTH",cv::CAP_PROP_OPENNI_FRAME_MAX_DEPTH			);
	SetObjectProperty(CAP_PROP_OPENNI, "CAP_PROP_OPENNI_BASELINE",cv::CAP_PROP_OPENNI_BASELINE					);
	SetObjectProperty(CAP_PROP_OPENNI, "CAP_PROP_OPENNI_FOCAL_LENGTH",cv::CAP_PROP_OPENNI_FOCAL_LENGTH				);
	SetObjectProperty(CAP_PROP_OPENNI, "CAP_PROP_OPENNI_REGISTRATION",cv::CAP_PROP_OPENNI_REGISTRATION				);
	SetObjectProperty(CAP_PROP_OPENNI, "CAP_PROP_OPENNI_REGISTRATION_ON",cv::CAP_PROP_OPENNI_REGISTRATION_ON			);
	SetObjectProperty(CAP_PROP_OPENNI, "CAP_PROP_OPENNI_APPROX_FRAME_SYNC",cv::CAP_PROP_OPENNI_APPROX_FRAME_SYNC			);
	SetObjectProperty(CAP_PROP_OPENNI, "CAP_PROP_OPENNI_MAX_BUFFER_SIZE",cv::CAP_PROP_OPENNI_MAX_BUFFER_SIZE			);
	SetObjectProperty(CAP_PROP_OPENNI, "CAP_PROP_OPENNI_CIRCLE_BUFFER",cv::CAP_PROP_OPENNI_CIRCLE_BUFFER				);
	SetObjectProperty(CAP_PROP_OPENNI, "CAP_PROP_OPENNI_MAX_TIME_DURATION",cv::CAP_PROP_OPENNI_MAX_TIME_DURATION			);
	SetObjectProperty(CAP_PROP_OPENNI, "CAP_PROP_OPENNI_GENERATOR_PRESENT",cv::CAP_PROP_OPENNI_GENERATOR_PRESENT			);
	SetObjectProperty(CAP_PROP_OPENNI, "CAP_PROP_OPENNI2_SYNC",cv::CAP_PROP_OPENNI2_SYNC						);
	SetObjectProperty(CAP_PROP_OPENNI, "CAP_PROP_OPENNI2_MIRROR",cv::CAP_PROP_OPENNI2_MIRROR					);
	overload->add_type_alias("CAP_PROP_OPENNI", "int");


	auto CAP_OPENNI_GENERATORS = CreateNamedObject(target, "CAP_OPENNI_GENERATORS");
	SetObjectProperty(CAP_OPENNI_GENERATORS, "CAP_OPENNI_IMAGE_GENERATOR_PRESENT",cv::CAP_OPENNI_IMAGE_GENERATOR_PRESENT			);
	SetObjectProperty(CAP_OPENNI_GENERATORS, "CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE",cv::CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE		);
	SetObjectProperty(CAP_OPENNI_GENERATORS, "CAP_OPENNI_DEPTH_GENERATOR_BASELINE",cv::CAP_OPENNI_DEPTH_GENERATOR_BASELINE			);
	SetObjectProperty(CAP_OPENNI_GENERATORS, "CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH",cv::CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH		);
	SetObjectProperty(CAP_OPENNI_GENERATORS, "CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION",cv::CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION		);
	SetObjectProperty(CAP_OPENNI_GENERATORS, "CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON",cv::CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON	);
	overload->add_type_alias("CAP_OPENNI_GENERATORS", "int");

	auto OPENNI_DEPTH = CreateNamedObject(target, "OPENNI_DEPTH");
	SetObjectProperty(OPENNI_DEPTH, "CAP_OPENNI_DEPTH_MAP",cv::CAP_OPENNI_DEPTH_MAP			);
	SetObjectProperty(OPENNI_DEPTH, "CAP_OPENNI_POINT_CLOUD_MAP",cv::CAP_OPENNI_POINT_CLOUD_MAP	);
	SetObjectProperty(OPENNI_DEPTH, "CAP_OPENNI_DISPARITY_MAP",cv::CAP_OPENNI_DISPARITY_MAP		);
	SetObjectProperty(OPENNI_DEPTH, "CAP_OPENNI_DISPARITY_MAP_32F",cv::CAP_OPENNI_DISPARITY_MAP_32F	);
	SetObjectProperty(OPENNI_DEPTH, "CAP_OPENNI_VALID_DEPTH_MASK",cv::CAP_OPENNI_VALID_DEPTH_MASK	);
	SetObjectProperty(OPENNI_DEPTH, "CAP_OPENNI_BGR_IMAGE",cv::CAP_OPENNI_BGR_IMAGE			);
	SetObjectProperty(OPENNI_DEPTH, "CAP_OPENNI_GRAY_IMAGE",cv::CAP_OPENNI_GRAY_IMAGE			);
	overload->add_type_alias("OPENNI_DEPTH", "int");

	auto CAP_OPENNI_OUTPUT = CreateNamedObject(target, "CAP_OPENNI_OUTPUT");
	SetObjectProperty(CAP_OPENNI_OUTPUT, "CAP_OPENNI_VGA_30HZ",cv::CAP_OPENNI_VGA_30HZ );
	SetObjectProperty(CAP_OPENNI_OUTPUT, "CAP_OPENNI_SXGA_15HZ",cv::CAP_OPENNI_SXGA_15HZ);
	SetObjectProperty(CAP_OPENNI_OUTPUT, "CAP_OPENNI_SXGA_30HZ",cv::CAP_OPENNI_SXGA_30HZ);
	SetObjectProperty(CAP_OPENNI_OUTPUT, "CAP_OPENNI_QVGA_30HZ",cv::CAP_OPENNI_QVGA_30HZ);
	SetObjectProperty(CAP_OPENNI_OUTPUT, "CAP_OPENNI_QVGA_60HZ",cv::CAP_OPENNI_QVGA_60HZ);
	overload->add_type_alias("CAP_OPENNI_OUTPUT", "int");


	auto CAP_PROP_GSTREAMER = CreateNamedObject(target, "CAP_PROP_GSTREAMER");
	SetObjectProperty(CAP_PROP_GSTREAMER, "CAP_PROP_GSTREAMER_QUEUE_LENGTH", cv::CAP_PROP_GSTREAMER_QUEUE_LENGTH);
	overload->add_type_alias("CAP_PROP_GSTREAMER", "int");


	auto CAP_PROP_PVAPI = CreateNamedObject(target, "CAP_PROP_PVAPI");
	SetObjectProperty(CAP_PROP_PVAPI, "CAP_PROP_PVAPI_MULTICASTIP",cv::CAP_PROP_PVAPI_MULTICASTIP			);
	SetObjectProperty(CAP_PROP_PVAPI, "CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE",cv::CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE	);
	SetObjectProperty(CAP_PROP_PVAPI, "CAP_PROP_PVAPI_DECIMATIONHORIZONTAL",cv::CAP_PROP_PVAPI_DECIMATIONHORIZONTAL 	);
	SetObjectProperty(CAP_PROP_PVAPI, "CAP_PROP_PVAPI_DECIMATIONVERTICAL",cv::CAP_PROP_PVAPI_DECIMATIONVERTICAL		);
	SetObjectProperty(CAP_PROP_PVAPI, "CAP_PROP_PVAPI_BINNINGX",cv::CAP_PROP_PVAPI_BINNINGX				);
	SetObjectProperty(CAP_PROP_PVAPI, "CAP_PROP_PVAPI_BINNINGY",cv::CAP_PROP_PVAPI_BINNINGY				);
	SetObjectProperty(CAP_PROP_PVAPI, "CAP_PROP_PVAPI_PIXELFORMAT",cv::CAP_PROP_PVAPI_PIXELFORMAT			);
	overload->add_type_alias("CAP_PROP_PVAPI", "int");


	auto CAP_PVAPI_FSTRIGMODE = CreateNamedObject(target, "CAP_PVAPI_FSTRIGMODE");
	SetObjectProperty(CAP_PVAPI_FSTRIGMODE, "CAP_PVAPI_FSTRIGMODE_FREERUN",cv::CAP_PVAPI_FSTRIGMODE_FREERUN	);
	SetObjectProperty(CAP_PVAPI_FSTRIGMODE, "CAP_PVAPI_FSTRIGMODE_SYNCIN1",cv::CAP_PVAPI_FSTRIGMODE_SYNCIN1	);
	SetObjectProperty(CAP_PVAPI_FSTRIGMODE, "CAP_PVAPI_FSTRIGMODE_SYNCIN2",cv::CAP_PVAPI_FSTRIGMODE_SYNCIN2	);
	SetObjectProperty(CAP_PVAPI_FSTRIGMODE, "CAP_PVAPI_FSTRIGMODE_FIXEDRATE",cv::CAP_PVAPI_FSTRIGMODE_FIXEDRATE);
	SetObjectProperty(CAP_PVAPI_FSTRIGMODE, "CAP_PVAPI_FSTRIGMODE_SOFTWARE",cv::CAP_PVAPI_FSTRIGMODE_SOFTWARE	);
	overload->add_type_alias("CAP_PVAPI_FSTRIGMODE", "int");

	auto CAP_PVAPI_DECIMATION = CreateNamedObject(target, "CAP_PVAPI_DECIMATION");
	SetObjectProperty(CAP_PVAPI_DECIMATION, "CAP_PVAPI_DECIMATION_OFF",cv::CAP_PVAPI_DECIMATION_OFF		);
	SetObjectProperty(CAP_PVAPI_DECIMATION, "CAP_PVAPI_DECIMATION_2OUTOF4",cv::CAP_PVAPI_DECIMATION_2OUTOF4	);
	SetObjectProperty(CAP_PVAPI_DECIMATION, "CAP_PVAPI_DECIMATION_2OUTOF8",cv::CAP_PVAPI_DECIMATION_2OUTOF8	);
	SetObjectProperty(CAP_PVAPI_DECIMATION, "CAP_PVAPI_DECIMATION_2OUTOF16",cv::CAP_PVAPI_DECIMATION_2OUTOF16	);
	overload->add_type_alias("CAP_PVAPI_DECIMATION", "int");


	auto CAP_PVAPI_PIXELFORMAT = CreateNamedObject(target, "CAP_PVAPI_PIXELFORMAT");
	SetObjectProperty(CAP_PVAPI_PIXELFORMAT, "CAP_PVAPI_PIXELFORMAT_MONO8",cv::CAP_PVAPI_PIXELFORMAT_MONO8		);
	SetObjectProperty(CAP_PVAPI_PIXELFORMAT, "CAP_PVAPI_PIXELFORMAT_MONO16",cv::CAP_PVAPI_PIXELFORMAT_MONO16 		);
	SetObjectProperty(CAP_PVAPI_PIXELFORMAT, "CAP_PVAPI_PIXELFORMAT_BAYER8",cv::CAP_PVAPI_PIXELFORMAT_BAYER8 		);
	SetObjectProperty(CAP_PVAPI_PIXELFORMAT, "CAP_PVAPI_PIXELFORMAT_BAYER16",cv::CAP_PVAPI_PIXELFORMAT_BAYER16		);
	SetObjectProperty(CAP_PVAPI_PIXELFORMAT, "CAP_PVAPI_PIXELFORMAT_RGB24",cv::CAP_PVAPI_PIXELFORMAT_RGB24		);
	SetObjectProperty(CAP_PVAPI_PIXELFORMAT, "CAP_PVAPI_PIXELFORMAT_BGR24",cv::CAP_PVAPI_PIXELFORMAT_BGR24		);
	SetObjectProperty(CAP_PVAPI_PIXELFORMAT, "CAP_PVAPI_PIXELFORMAT_RGBA32",cv::CAP_PVAPI_PIXELFORMAT_RGBA32 		);
	SetObjectProperty(CAP_PVAPI_PIXELFORMAT, "CAP_PVAPI_PIXELFORMAT_BGRA32",cv::CAP_PVAPI_PIXELFORMAT_BGRA32 		);
	overload->add_type_alias("CAP_PVAPI_PIXELFORMAT", "int");

	auto CAP_PROP_XI = CreateNamedObject(target, "CAP_PROP_XI");
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_DOWNSAMPLING",cv::CAP_PROP_XI_DOWNSAMPLING							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_DATA_FORMAT",cv::CAP_PROP_XI_DATA_FORMAT 							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_OFFSET_X",cv::CAP_PROP_XI_OFFSET_X								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_OFFSET_Y",cv::CAP_PROP_XI_OFFSET_Y								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_TRG_SOURCE",cv::CAP_PROP_XI_TRG_SOURCE							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_TRG_SOFTWARE",cv::CAP_PROP_XI_TRG_SOFTWARE							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_GPI_SELECTOR",cv::CAP_PROP_XI_GPI_SELECTOR							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_GPI_MODE",cv::CAP_PROP_XI_GPI_MODE								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_GPI_LEVEL",cv::CAP_PROP_XI_GPI_LEVEL								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_GPO_SELECTOR",cv::CAP_PROP_XI_GPO_SELECTOR							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_GPO_MODE",cv::CAP_PROP_XI_GPO_MODE								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_LED_SELECTOR",cv::CAP_PROP_XI_LED_SELECTOR							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_LED_MODE",cv::CAP_PROP_XI_LED_MODE 								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_MANUAL_WB",cv::CAP_PROP_XI_MANUAL_WB								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_AUTO_WB",cv::CAP_PROP_XI_AUTO_WB								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_AEAG",cv::CAP_PROP_XI_AEAG									);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_EXP_PRIORITY",cv::CAP_PROP_XI_EXP_PRIORITY							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_AE_MAX_LIMIT",cv::CAP_PROP_XI_AE_MAX_LIMIT							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_AG_MAX_LIMIT",cv::CAP_PROP_XI_AG_MAX_LIMIT							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_AEAG_LEVEL",cv::CAP_PROP_XI_AEAG_LEVEL							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_TIMEOUT",cv::CAP_PROP_XI_TIMEOUT								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_EXPOSURE",cv::CAP_PROP_XI_EXPOSURE								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_EXPOSURE_BURST_COUNT",cv::CAP_PROP_XI_EXPOSURE_BURST_COUNT					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_GAIN_SELECTOR",cv::CAP_PROP_XI_GAIN_SELECTOR							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_GAIN",cv::CAP_PROP_XI_GAIN									);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_DOWNSAMPLING_TYPE",cv::CAP_PROP_XI_DOWNSAMPLING_TYPE						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_BINNING_SELECTOR",cv::CAP_PROP_XI_BINNING_SELECTOR						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_BINNING_VERTICAL",cv::CAP_PROP_XI_BINNING_VERTICAL						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_BINNING_HORIZONTAL",cv::CAP_PROP_XI_BINNING_HORIZONTAL					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_BINNING_PATTERN",cv::CAP_PROP_XI_BINNING_PATTERN						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_DECIMATION_SELECTOR",cv::CAP_PROP_XI_DECIMATION_SELECTOR					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_DECIMATION_VERTICAL",cv::CAP_PROP_XI_DECIMATION_VERTICAL					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_DECIMATION_HORIZONTAL",cv::CAP_PROP_XI_DECIMATION_HORIZONTAL					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_DECIMATION_PATTERN",cv::CAP_PROP_XI_DECIMATION_PATTERN					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR",cv::CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR		);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_TEST_PATTERN",cv::CAP_PROP_XI_TEST_PATTERN							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_IMAGE_DATA_FORMAT",cv::CAP_PROP_XI_IMAGE_DATA_FORMAT						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_SHUTTER_TYPE",cv::CAP_PROP_XI_SHUTTER_TYPE							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_SENSOR_TAPS",cv::CAP_PROP_XI_SENSOR_TAPS							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_AEAG_ROI_OFFSET_X",cv::CAP_PROP_XI_AEAG_ROI_OFFSET_X						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_AEAG_ROI_OFFSET_Y",cv::CAP_PROP_XI_AEAG_ROI_OFFSET_Y						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_AEAG_ROI_WIDTH",cv::CAP_PROP_XI_AEAG_ROI_WIDTH						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_AEAG_ROI_HEIGHT",cv::CAP_PROP_XI_AEAG_ROI_HEIGHT						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_BPC",cv::CAP_PROP_XI_BPC									);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_WB_KR",cv::CAP_PROP_XI_WB_KR									);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_WB_KG",cv::CAP_PROP_XI_WB_KG									);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_WB_KB",cv::CAP_PROP_XI_WB_KB									);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_WIDTH",cv::CAP_PROP_XI_WIDTH									);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_HEIGHT",cv::CAP_PROP_XI_HEIGHT								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_REGION_SELECTOR",cv::CAP_PROP_XI_REGION_SELECTOR						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_REGION_MODE",cv::CAP_PROP_XI_REGION_MODE							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_LIMIT_BANDWIDTH",cv::CAP_PROP_XI_LIMIT_BANDWIDTH						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH",cv::CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH",cv::CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH",cv::CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_OUTPUT_DATA_PACKING",cv::CAP_PROP_XI_OUTPUT_DATA_PACKING					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE",cv::CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE				);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_IS_COOLED",cv::CAP_PROP_XI_IS_COOLED								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_COOLING",cv::CAP_PROP_XI_COOLING								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_TARGET_TEMP",cv::CAP_PROP_XI_TARGET_TEMP							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CHIP_TEMP",cv::CAP_PROP_XI_CHIP_TEMP								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_HOUS_TEMP",cv::CAP_PROP_XI_HOUS_TEMP								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_HOUS_BACK_SIDE_TEMP",cv::CAP_PROP_XI_HOUS_BACK_SIDE_TEMP					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_SENSOR_BOARD_TEMP",cv::CAP_PROP_XI_SENSOR_BOARD_TEMP						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CMS",cv::CAP_PROP_XI_CMS									);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_APPLY_CMS",cv::CAP_PROP_XI_APPLY_CMS								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_IMAGE_IS_COLOR",cv::CAP_PROP_XI_IMAGE_IS_COLOR						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_COLOR_FILTER_ARRAY",cv::CAP_PROP_XI_COLOR_FILTER_ARRAY					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_GAMMAY",cv::CAP_PROP_XI_GAMMAY								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_GAMMAC",cv::CAP_PROP_XI_GAMMAC								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_SHARPNESS",cv::CAP_PROP_XI_SHARPNESS								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CC_MATRIX_00",cv::CAP_PROP_XI_CC_MATRIX_00							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CC_MATRIX_01",cv::CAP_PROP_XI_CC_MATRIX_01							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CC_MATRIX_02",cv::CAP_PROP_XI_CC_MATRIX_02							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CC_MATRIX_03",cv::CAP_PROP_XI_CC_MATRIX_03							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CC_MATRIX_10",cv::CAP_PROP_XI_CC_MATRIX_10							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CC_MATRIX_11",cv::CAP_PROP_XI_CC_MATRIX_11							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CC_MATRIX_12",cv::CAP_PROP_XI_CC_MATRIX_12							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CC_MATRIX_13",cv::CAP_PROP_XI_CC_MATRIX_13							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CC_MATRIX_20",cv::CAP_PROP_XI_CC_MATRIX_20							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CC_MATRIX_21",cv::CAP_PROP_XI_CC_MATRIX_21							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CC_MATRIX_22",cv::CAP_PROP_XI_CC_MATRIX_22							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CC_MATRIX_23",cv::CAP_PROP_XI_CC_MATRIX_23							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CC_MATRIX_30",cv::CAP_PROP_XI_CC_MATRIX_30							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CC_MATRIX_31",cv::CAP_PROP_XI_CC_MATRIX_31							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CC_MATRIX_32",cv::CAP_PROP_XI_CC_MATRIX_32							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_CC_MATRIX_33",cv::CAP_PROP_XI_CC_MATRIX_33							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_DEFAULT_CC_MATRIX",cv::CAP_PROP_XI_DEFAULT_CC_MATRIX						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_TRG_SELECTOR",cv::CAP_PROP_XI_TRG_SELECTOR							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_ACQ_FRAME_BURST_COUNT",cv::CAP_PROP_XI_ACQ_FRAME_BURST_COUNT					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_DEBOUNCE_EN",cv::CAP_PROP_XI_DEBOUNCE_EN							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_DEBOUNCE_T0",cv::CAP_PROP_XI_DEBOUNCE_T0							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_DEBOUNCE_T1",cv::CAP_PROP_XI_DEBOUNCE_T1							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_DEBOUNCE_POL",cv::CAP_PROP_XI_DEBOUNCE_POL							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_LENS_MODE",cv::CAP_PROP_XI_LENS_MODE								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_LENS_APERTURE_VALUE",cv::CAP_PROP_XI_LENS_APERTURE_VALUE					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE",cv::CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE				);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_LENS_FOCUS_MOVE",cv::CAP_PROP_XI_LENS_FOCUS_MOVE						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_LENS_FOCUS_DISTANCE",cv::CAP_PROP_XI_LENS_FOCUS_DISTANCE					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_LENS_FOCAL_LENGTH",cv::CAP_PROP_XI_LENS_FOCAL_LENGTH						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_LENS_FEATURE_SELECTOR",cv::CAP_PROP_XI_LENS_FEATURE_SELECTOR					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_LENS_FEATURE",cv::CAP_PROP_XI_LENS_FEATURE							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_DEVICE_MODEL_ID",cv::CAP_PROP_XI_DEVICE_MODEL_ID						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_DEVICE_SN",cv::CAP_PROP_XI_DEVICE_SN								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA",cv::CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA			);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_IMAGE_PAYLOAD_SIZE",cv::CAP_PROP_XI_IMAGE_PAYLOAD_SIZE					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT",cv::CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT				);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ",cv::CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX",cv::CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX				);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT",cv::CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT			);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_FRAMERATE",cv::CAP_PROP_XI_FRAMERATE								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_COUNTER_SELECTOR",cv::CAP_PROP_XI_COUNTER_SELECTOR						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_COUNTER_VALUE",cv::CAP_PROP_XI_COUNTER_VALUE							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_ACQ_TIMING_MODE",cv::CAP_PROP_XI_ACQ_TIMING_MODE						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_AVAILABLE_BANDWIDTH",cv::CAP_PROP_XI_AVAILABLE_BANDWIDTH					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_BUFFER_POLICY",cv::CAP_PROP_XI_BUFFER_POLICY							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_LUT_EN",cv::CAP_PROP_XI_LUT_EN								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_LUT_INDEX",cv::CAP_PROP_XI_LUT_INDEX								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_LUT_VALUE",cv::CAP_PROP_XI_LUT_VALUE								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_TRG_DELAY",cv::CAP_PROP_XI_TRG_DELAY								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_TS_RST_MODE",cv::CAP_PROP_XI_TS_RST_MODE							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_TS_RST_SOURCE",cv::CAP_PROP_XI_TS_RST_SOURCE							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_IS_DEVICE_EXIST",cv::CAP_PROP_XI_IS_DEVICE_EXIST						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_ACQ_BUFFER_SIZE",cv::CAP_PROP_XI_ACQ_BUFFER_SIZE						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT",cv::CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE",cv::CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE				);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_BUFFERS_QUEUE_SIZE",cv::CAP_PROP_XI_BUFFERS_QUEUE_SIZE					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT",cv::CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT			);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_RECENT_FRAME",cv::CAP_PROP_XI_RECENT_FRAME							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_DEVICE_RESET",cv::CAP_PROP_XI_DEVICE_RESET							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_COLUMN_FPN_CORRECTION",cv::CAP_PROP_XI_COLUMN_FPN_CORRECTION					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_ROW_FPN_CORRECTION ",cv::CAP_PROP_XI_ROW_FPN_CORRECTION 					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_SENSOR_MODE",cv::CAP_PROP_XI_SENSOR_MODE							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_HDR",cv::CAP_PROP_XI_HDR									);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_HDR_KNEEPOINT_COUNT",cv::CAP_PROP_XI_HDR_KNEEPOINT_COUNT					);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_HDR_T1",cv::CAP_PROP_XI_HDR_T1								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_HDR_T2",cv::CAP_PROP_XI_HDR_T2								);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_KNEEPOINT1",cv::CAP_PROP_XI_KNEEPOINT1							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_KNEEPOINT2",cv::CAP_PROP_XI_KNEEPOINT2							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_IMAGE_BLACK_LEVEL",cv::CAP_PROP_XI_IMAGE_BLACK_LEVEL						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_HW_REVISION",cv::CAP_PROP_XI_HW_REVISION							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_DEBUG_LEVEL",cv::CAP_PROP_XI_DEBUG_LEVEL							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION",cv::CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION			);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_FFS_FILE_ID",cv::CAP_PROP_XI_FFS_FILE_ID							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_FFS_FILE_SIZE",cv::CAP_PROP_XI_FFS_FILE_SIZE							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_FREE_FFS_SIZE",cv::CAP_PROP_XI_FREE_FFS_SIZE							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_USED_FFS_SIZE",cv::CAP_PROP_XI_USED_FFS_SIZE							);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_FFS_ACCESS_KEY",cv::CAP_PROP_XI_FFS_ACCESS_KEY						);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_SENSOR_FEATURE_SELECTOR",cv::CAP_PROP_XI_SENSOR_FEATURE_SELECTOR				);
	SetObjectProperty(CAP_PROP_XI,"CAP_PROP_XI_SENSOR_FEATURE_VALUE",cv::CAP_PROP_XI_SENSOR_FEATURE_VALUE					);
	overload->add_type_alias("CAP_PROP_XI", "int");



	auto CAP_PROP_IOS_DEVICE = CreateNamedObject(target, "CAP_PROP_IOS_DEVICE");
	SetObjectProperty(CAP_PROP_IOS_DEVICE, "CAP_PROP_IOS_DEVICE_FOCUS",cv::CAP_PROP_IOS_DEVICE_FOCUS			);
	SetObjectProperty(CAP_PROP_IOS_DEVICE, "CAP_PROP_IOS_DEVICE_EXPOSURE",cv::CAP_PROP_IOS_DEVICE_EXPOSURE		);
	SetObjectProperty(CAP_PROP_IOS_DEVICE, "CAP_PROP_IOS_DEVICE_FLASH",cv::CAP_PROP_IOS_DEVICE_FLASH			);
	SetObjectProperty(CAP_PROP_IOS_DEVICE, "CAP_PROP_IOS_DEVICE_WHITEBALANCE",cv::CAP_PROP_IOS_DEVICE_WHITEBALANCE	);
	SetObjectProperty(CAP_PROP_IOS_DEVICE, "CAP_PROP_IOS_DEVICE_TORCH",cv::CAP_PROP_IOS_DEVICE_TORCH			);
	overload->add_type_alias("CAP_PROP_IOS_DEVICE", "int");


	auto CAP_PROP_GIGA_FRAME = CreateNamedObject(target, "CAP_PROP_GIGA_FRAME");
	SetObjectProperty(CAP_PROP_GIGA_FRAME, "CAP_PROP_GIGA_FRAME_OFFSET_X",cv::CAP_PROP_GIGA_FRAME_OFFSET_X	);
	SetObjectProperty(CAP_PROP_GIGA_FRAME, "CAP_PROP_GIGA_FRAME_OFFSET_Y",cv::CAP_PROP_GIGA_FRAME_OFFSET_Y	);
	SetObjectProperty(CAP_PROP_GIGA_FRAME, "CAP_PROP_GIGA_FRAME_WIDTH_MAX",cv::CAP_PROP_GIGA_FRAME_WIDTH_MAX 	);
	SetObjectProperty(CAP_PROP_GIGA_FRAME, "CAP_PROP_GIGA_FRAME_HEIGH_MAX",cv::CAP_PROP_GIGA_FRAME_HEIGH_MAX 	);
	SetObjectProperty(CAP_PROP_GIGA_FRAME, "CAP_PROP_GIGA_FRAME_SENS_WIDTH",cv::CAP_PROP_GIGA_FRAME_SENS_WIDTH	);
	SetObjectProperty(CAP_PROP_GIGA_FRAME, "CAP_PROP_GIGA_FRAME_SENS_HEIGH",cv::CAP_PROP_GIGA_FRAME_SENS_HEIGH	);
	overload->add_type_alias("CAP_PROP_GIGA_FRAME", "int");

	auto CAP_PROP_INTELPERC = CreateNamedObject(target, "CAP_PROP_INTELPERC");
	SetObjectProperty(CAP_PROP_INTELPERC, "CAP_PROP_INTELPERC_PROFILE_COUNT",cv::CAP_PROP_INTELPERC_PROFILE_COUNT				);
	SetObjectProperty(CAP_PROP_INTELPERC, "CAP_PROP_INTELPERC_PROFILE_IDX",cv::CAP_PROP_INTELPERC_PROFILE_IDX				);
	SetObjectProperty(CAP_PROP_INTELPERC, "CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE",cv::CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE	);
	SetObjectProperty(CAP_PROP_INTELPERC, "CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE",cv::CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE		);
	SetObjectProperty(CAP_PROP_INTELPERC, "CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD",cv::CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD	);
	SetObjectProperty(CAP_PROP_INTELPERC, "CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ",cv::CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ	);
	SetObjectProperty(CAP_PROP_INTELPERC, "CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT",cv::CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT	);
	overload->add_type_alias("CAP_PROP_INTELPERC", "int");

	auto CAP_INTELPERC = CreateNamedObject(target, "CAP_INTELPERC");
	SetObjectProperty(CAP_INTELPERC, "CAP_INTELPERC_DEPTH_GENERATOR",cv::CAP_INTELPERC_DEPTH_GENERATOR);
	SetObjectProperty(CAP_INTELPERC, "CAP_INTELPERC_IMAGE_GENERATOR",cv::CAP_INTELPERC_IMAGE_GENERATOR);
	SetObjectProperty(CAP_INTELPERC, "CAP_INTELPERC_GENERATORS_MASK",cv::CAP_INTELPERC_GENERATORS_MASK);
	overload->add_type_alias("CAP_INTELPERC", "int");

	auto CAP_INTELPERC_TYPE = CreateNamedObject(target, "CAP_INTELPERC_TYPE");
	SetObjectProperty(CAP_INTELPERC_TYPE, "CAP_INTELPERC_DEPTH_MAP",cv::CAP_INTELPERC_DEPTH_MAP	);
	SetObjectProperty(CAP_INTELPERC_TYPE, "CAP_INTELPERC_UVDEPTH_MAP",cv::CAP_INTELPERC_UVDEPTH_MAP	);
	SetObjectProperty(CAP_INTELPERC_TYPE, "CAP_INTELPERC_IR_MAP",cv::CAP_INTELPERC_IR_MAP		);
	SetObjectProperty(CAP_INTELPERC_TYPE, "CAP_INTELPERC_IMAGE",cv::CAP_INTELPERC_IMAGE		);
	overload->add_type_alias("CAP_INTELPERC_TYPE", "int");

	auto VIDEOWRITER_PROP = CreateNamedObject(target, "VIDEOWRITER_PROP");
	SetObjectProperty(VIDEOWRITER_PROP, "VIDEOWRITER_PROP_QUALITY",cv::VIDEOWRITER_PROP_QUALITY	 );
	SetObjectProperty(VIDEOWRITER_PROP, "VIDEOWRITER_PROP_FRAMEBYTES",cv::VIDEOWRITER_PROP_FRAMEBYTES);
	SetObjectProperty(VIDEOWRITER_PROP, "VIDEOWRITER_PROP_NSTRIPES",cv::VIDEOWRITER_PROP_NSTRIPES	 );
	overload->add_type_alias("VIDEOWRITER_PROP", "int");


	auto CAP_PROP = CreateNamedObject(target, "CAP_PROP");
	SetObjectProperty(CAP_PROP, "CAP_PROP_GPHOTO2_PREVIEW",cv::CAP_PROP_GPHOTO2_PREVIEW			);
	SetObjectProperty(CAP_PROP, "CAP_PROP_GPHOTO2_WIDGET_ENUMERATE",cv::CAP_PROP_GPHOTO2_WIDGET_ENUMERATE	);
	SetObjectProperty(CAP_PROP, "CAP_PROP_GPHOTO2_RELOAD_CONFIG",cv::CAP_PROP_GPHOTO2_RELOAD_CONFIG		);
	SetObjectProperty(CAP_PROP, "CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE",cv::CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE	);
	SetObjectProperty(CAP_PROP, "CAP_PROP_GPHOTO2_COLLECT_MSGS",cv::CAP_PROP_GPHOTO2_COLLECT_MSGS		);
	SetObjectProperty(CAP_PROP, "CAP_PROP_GPHOTO2_FLUSH_MSGS",cv::CAP_PROP_GPHOTO2_FLUSH_MSGS			);
	SetObjectProperty(CAP_PROP, "CAP_PROP_SPEED",cv::CAP_PROP_SPEED 						);
	SetObjectProperty(CAP_PROP, "CAP_PROP_APERTURE",cv::CAP_PROP_APERTURE					);
	SetObjectProperty(CAP_PROP, "CAP_PROP_EXPOSUREPROGRAM",cv::CAP_PROP_EXPOSUREPROGRAM			);
	SetObjectProperty(CAP_PROP, "CAP_PROP_VIEWFINDER",cv::CAP_PROP_VIEWFINDER					);
	overload->add_type_alias("CAP_PROP", "int");

	VideoCapture::Init(target, overload);

	VideoWriter::Init(target, overload);
};
